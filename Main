import java.util.Scanner;
import java.util.Map;

public class Main {

    // Главный метод
    public static void main(String[] args) {
        System.out.println("Выберите задание: ");
        System.out.println("1) Задание 1. №2,3 ");
        System.out.println("2) Задание 2. №2 ");
        System.out.println("3) Задание 3. №3 ");
        System.out.println("4) Задание 4. №8 ");
        System.out.println("5) Задание 5. №5 ");
        System.out.println("Выберите задание: ");

        Scanner scan = new Scanner(System.in);

        if (scan.hasNextInt()) {
            int choice = scan.nextInt();

            switch (choice) {

                case 1: {
                    Human cleopatra = new Human("Клеопатра", 152);
                    Human pushkin = new Human("Пушкин", 167);
                    Human vladimir = new Human("Владимир", 189);

                    System.out.println(cleopatra);
                    System.out.println(pushkin);
                    System.out.println(vladimir);

                    Name cleopatra1 = new Name(null, "Клеопатра", null);
                    Name pushkin1 = new Name("Пушкин", "Александр", "Сергеевич");
                    Name vladimir1 = new Name("Маяковский", "Владимир", null);

                    System.out.println(cleopatra1);
                    System.out.println(pushkin1);
                    System.out.println(vladimir1);

                    break;
                }
                case 2:
                {
                    Name cleopatraName = new Name(null, "Клеопатра", null);
                    Name pushkinName = new Name("Пушкин", "Александр", "Сергеевич");
                    Name mayakovskyName = new Name("Маяковский", "Владимир", null);

                    Person cleopatra = new Person(cleopatraName, 152);
                    Person pushkin = new Person(pushkinName, 167);
                    Person mayakovsky = new Person(mayakovskyName, 189);

                    System.out.println(cleopatra);
                    System.out.println(pushkin);
                    System.out.println(mayakovsky);

                    break;
                }
                case 3:
                {
                    System.out.println("Задание 4");
                    City A = new City("A");
                    City B = new City("B");
                    City C = new City("C");
                    City D = new City("D");
                    City E = new City("E");
                    City F = new City("F");

                    A.addWays(B, 5);
                    A.addWays(D, 6);
                    A.addWays(F, 1);

                    B.addWays(A, 5);
                    B.addWays(C, 3);

                    C.addWays(B, 3);
                    C.addWays(D, 4);

                    D.addWays(A, 6);
                    D.addWays(C, 4);
                    D.addWays(E, 2);

                    E.addWays(F, 2);

                    F.addWays(B, 1);
                    F.addWays(E, 2);

                    System.out.println(A);
                    System.out.println(B);
                    System.out.println(C);
                    System.out.println(D);
                    System.out.println(E);
                    System.out.println(F);

                    break;
                }
                case 4:
                {
                    // Создание городов отдельно
                    NewCity cityA = new NewCity("A");
                    NewCity cityB = new NewCity("B");
                    NewCity cityC = new NewCity("C");

                    // Добавляем пути через метод addPath()
                    cityA.addPath(cityB, 5);
                    cityA.addPath(cityC, 6);

                    cityB.addPath(cityA, 1);
                    cityB.addPath(cityC, 3);

                    cityC.addPath(cityB, 1);

                    // Альтернатива: можно создать город с путями сразу
                    // Пример — создадим город G, который связан с A и B
                    Map<NewCity, Integer> connectionsG = Map.of(
                            cityA, 7,
                            cityB, 8
                    );
                    NewCity cityG = new NewCity("G", connectionsG);

                    // Печать информации о городах и их путях
                    System.out.println(cityA);
                    System.out.println(cityB);
                    System.out.println(cityC);
                    System.out.println(cityG);

                    break;
                }
                case 5:
                {
                    // Создание дробей
                    Fraction f1 = new Fraction(1, 3); // 1/3
                    Fraction f2 = new Fraction(2, 3); // 2/3
                    Fraction f3 = new Fraction(3, 4); // 3/4

                    System.out.println("Первая дробь " + f1);
                    System.out.println("Вторая дробь " + f1);
                    System.out.println("Третья дробь " + f1);

                    // Пример сложения дробей
                    Fraction sumResult = f1.add(f2);
                    System.out.println(f1 + " + " + f2 + " = " + sumResult);

                    // Пример вычитания дробей
                    Fraction subtractResult = f1.subtract(f2);
                    System.out.println(f1 + " - " + f2 + " = " + subtractResult);

                    // Пример умножения дробей
                    Fraction multiplyResult = f1.multiply(f2);
                    System.out.println(f1 + " * " + f2 + " = " + multiplyResult);

                    // Пример деления дробей
                    Fraction divideResult = f1.divide(f2);
                    System.out.println(f1 + " / " + f2 + " = " + divideResult);

                    // Пример операций с целым числом
                    Fraction addWithNumber = f1.add(5); // 1/3 + 5
                    System.out.println(f1 + " + 5 = " + addWithNumber);

                    Fraction subtractWithNumber = f1.subtract(5); // 1/3 - 5
                    System.out.println(f1 + " - 5 = " + subtractWithNumber);

                    Fraction multiplyWithNumber = f1.multiply(5); // 1/3 * 5
                    System.out.println(f1 + " * 5 = " + multiplyWithNumber);

                    Fraction divideWithNumber = f1.divide(5); // 1/3 / 5
                    System.out.println(f1 + " / 5 = " + divideWithNumber);

                    // Пример сложных операций: f1.sum(f2).div(f3).minus(5)
                    Fraction complexResult = f1.add(f2).divide(f3).subtract(5);
                    System.out.println("(" + f1 + " + " + f2 + ") / " + f3 + " - 5 = " + complexResult);

                    break;
                }
                default: {
                    break;
                }
            }
        }
    }
}
